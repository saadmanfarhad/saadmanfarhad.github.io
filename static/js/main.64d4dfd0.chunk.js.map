{"version":3,"sources":["animated-bg/wave-top.png","animated-bg/wave-mid.png","animated-bg/wave-bot.png","serviceWorker.ts","svg-clock/utls.ts","svg-clock/svgCircle.tsx","svg-clock/svgTriangle.tsx","svg-clock/svgHand.tsx","svg-clock/index.tsx","animated-bg/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","rad","deg","Math","PI","pos","x","y","r","sin","toString","cos","stringPos","obj","strPad","num","str","length","getMonth","m","SvgCircle","props","SvgTriangle","SvgHand","transform","cirleElement","style","className","text","HandsDisplayStyle","fontSize","textAnchor","fontWeight","AppInitialState","time","year","month","week","day","hour","min","sec","transformMin","transformSec","dTri","SvgClockComponent","handCircle","cx","cy","React","useState","state","setState","FrameLastSecond","draw","now","Date","s","getSeconds","h","getHours","getMinutes","getDate","getDay","getFullYear","prog","ms","getMilliseconds","d","handS","utils","handM","tri","requestAnimationFrame","useEffect","wraperDivStyle","theme","svgStyle","id","viewBox","version","xmlns","xmlnsXlink","fill","strokeWidth","strokeLinejoin","AnimatedBackground","console","log","backgroundImage","WaveTop","WaveMid","WaveBot","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.64d4dfd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wave-top.05d52988.png\";","module.exports = __webpack_public_path__ + \"static/media/wave-mid.ba75e0c9.png\";","module.exports = __webpack_public_path__ + \"static/media/wave-bot.6cd18bc0.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Pos } from './types';\r\n\r\nexport function rad(deg: number): number {\r\n  return deg * Math.PI / 180;\r\n}\r\n\r\nexport function pos(x: number, y: number, r: number, deg: number): Pos {\r\n  return {\r\n    x: (x - r * Math.sin(rad(deg))).toString(),\r\n    y: (y - r * Math.cos(rad(deg))).toString()\r\n  };\r\n}\r\n\r\nexport function stringPos(obj: Pos) {\r\n  return obj.x + \",\" + obj.y;\r\n}\r\n\r\nexport function strPad(num: number): string {\r\n  const str = num.toString();\r\n  return str.length > 1 ? str : \"0\" + str;\r\n}\r\n\r\nexport function getWeek(d: number): string {\r\n  return [\r\n    \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n  ][d];\r\n}\r\n\r\nexport function getMonth(m: number): string {\r\n  return [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ][m];\r\n}","import React from 'react';\r\n\r\ntype SvgCircleProps = {\r\n  cx: string,\r\n  cy: string,\r\n  r: string,\r\n  fill?: string,\r\n  className?: string,\r\n  style?: React.CSSProperties,\r\n}\r\n\r\nexport const SvgCircle: React.FC<SvgCircleProps> = (props: SvgCircleProps) => {\r\n  return (\r\n    <circle {...props}></circle>\r\n  );\r\n}","import React from 'react';\r\n\r\ntype SvgTriangleProps = {\r\n  d: string,\r\n  style?: React.CSSProperties,\r\n  className?: string,\r\n}\r\n\r\nexport const SvgTriangle: React.FC<SvgTriangleProps> = (props: SvgTriangleProps) => {\r\n  return (\r\n    <path {...props}></path>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport type SvgHandProps = {\r\n  x: string,\r\n  y: string,\r\n  transform: string,\r\n  text: string,\r\n  style?: React.CSSProperties,\r\n  className?: string,\r\n  cirleElement?: JSX.Element,\r\n}\r\n\r\nexport const SvgHand: React.FC<SvgHandProps> = (props: SvgHandProps) => {\r\n  return (\r\n    <g transform={props.transform}>\r\n      {props.cirleElement}\r\n      <text x={props.x} y={props.y} style={props.style} className={props.className}>{props.text}</text>\r\n    </g>\r\n  );\r\n}","import React from 'react';\nimport * as utils from './utls';\nimport './clock.css';\nimport { ClockTime } from './types';\nimport { SvgCircle } from './svgCircle';\nimport { SvgTriangle } from './svgTriangle';\nimport { SvgHand } from './svgHand';\n\ntype AppState = {\n  time: ClockTime,\n  transformMin: string,\n  transformSec: string,\n  dTri: string,\n}\n\nconst HandsDisplayStyle: React.CSSProperties = {\n  fontSize: \"40\",\n  textAnchor: \"middle\",\n  fontWeight: \"bold\",\n}\n\nconst AppInitialState: AppState = {\n  time: {\n    year: \"....\",\n    month: \"...\",\n    week: \"...\",\n    day: \"..\",\n    hour: \"..\",\n    min: \"..\",\n    sec: \"..\",\n  },\n  transformMin: \"267.7369,144.6167\",\n  transformSec: \"259.0761,64.0246\",\n  dTri: \"M259.076115911649,64.02464348021618L267.7369315913329,144.6166779233966L256,256Z\"\n}\n\ntype SvgClockComponentProps = {\n  svgStyle?: React.CSSProperties,\n  wraperDivStyle?: React.CSSProperties,\n  theme?: 'frog' | 'sol' | 'wasp';\n}\n\nconst SvgClockComponent: React.FC<SvgClockComponentProps> = (props: SvgClockComponentProps) => {\n  const handCircle: JSX.Element = (\n    <SvgCircle cx=\"0\" cy=\"0\" r=\"32\" className=\"f1\" />\n  );\n\n  const perFrameRefresh: boolean = false;\n\n  const [state, setState] = React.useState<AppState>(AppInitialState);\n  let FrameLastSecond: number = 0;\n\n  function draw(): void {\n    const now: Date = new Date();\n    const s: number = now.getSeconds();\n\n    if (!perFrameRefresh && s === FrameLastSecond) {\n      window.requestAnimationFrame(draw);\n      return;\n    }\n\n    const h: number = now.getHours();\n    const m: number = now.getMinutes();\n    const day: number = now.getDate();\n    const week: number = now.getDay();\n    const month: number = now.getMonth();\n    const year: number = now.getFullYear();\n\n    const ms: number = now.getMilliseconds();\n    const prog = { ms: ms / 1000, s: 0, m: 0, h: 0 };\n    prog.s = (s + prog.ms) / 60;\n    prog.m = (m + prog.s) / 60;\n    prog.h = (h + prog.m) / 12;\n\n    const handS: string = utils.stringPos(utils.pos(256, 256, 192, prog.s * -360));\n    const handM: string = utils.stringPos(utils.pos(256, 256, 112, prog.m * -360));\n    const tri: string = utils.stringPos(utils.pos(256, 256, 0, prog.h * -360));\n\n    FrameLastSecond = s;\n    setState({\n      time: {\n        year: year.toString(),\n        month: utils.getMonth(month),\n        week: utils.getWeek(week),\n        day: day.toString(),\n        hour: utils.strPad(h),\n        min: utils.strPad(m),\n        sec: utils.strPad(s),\n      },\n      transformMin: handM,\n      transformSec: handS,\n      dTri: `M${handS}L${handM}L${tri}Z`,\n    });\n\n    window.requestAnimationFrame(draw);\n  };\n\n  React.useEffect(() => {\n    draw();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div style={props.wraperDivStyle} className={`clock-container svg-clock-${props.theme || 'sol'}`}>\n      <svg style={props.svgStyle} id=\"clock\" viewBox=\"0 0 512 512\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <style>\n          {`text {font - family: 'Helvetica Bold', 'Helvetica', sans-serif; font-weight: bold; }`}\n        </style>\n        <SvgCircle cx=\"256\" cy=\"256\" r=\"256\" className=\"f1\" />\n        <SvgCircle cx=\"256\" cy=\"256\" r=\"192\" className=\"s2\" fill=\"none\" style={{ strokeWidth: 4 }} />\n        <SvgCircle cx=\"256\" cy=\"256\" r=\"112\" className=\"s2\" fill=\"none\" style={{ strokeWidth: 4 }} />\n        <SvgTriangle d={state.dTri} className=\"f2 s2\" style={{ strokeWidth: \"80\", strokeLinejoin: \"round\" }} />\n        <SvgHand cirleElement={handCircle} x=\"0\" y=\"14\" transform=\"matrix(1,0,0,1,256,256)\" style={HandsDisplayStyle} className=\"f2 displayH\" text={state.time.hour} />\n        <SvgHand cirleElement={handCircle} x=\"0\" y=\"14\" transform={`matrix(1,0,0,1,${state.transformMin})`} style={HandsDisplayStyle} className=\"f2 displayM\" text={state.time.min} />\n        <SvgHand cirleElement={handCircle} x=\"0\" y=\"14\" transform={`matrix(1,0,0,1,${state.transformSec})`} style={HandsDisplayStyle} className=\"f2 displayS\" text={state.time.sec} />\n      </svg>\n      <span className=\"text-container\">\n        {state.time.week}, {state.time.day}\n        <hr className=\"custom-style\" />\n        {state.time.month} {state.time.year}\n      </span>\n    </div>\n  );\n};\n\nexport default SvgClockComponent;\n","import React from 'react';\r\nimport './bg.css';\r\nimport WaveTop from './wave-top.png';\r\nimport WaveMid from './wave-mid.png';\r\nimport WaveBot from './wave-bot.png';\r\n\r\nconst AnimatedBackground: React.FC = () => {\r\n  console.log()\r\n  return (\r\n    <div className=\"waveWrapper waveAnimation\">\r\n      <div className=\"waveWrapperInner bgTop\">\r\n        <div className=\"wave waveTop\" style={{ backgroundImage: `url('${WaveTop}')` }}></div>\r\n      </div>\r\n      <div className=\"waveWrapperInner bgMiddle\">\r\n        <div className=\"wave waveMiddle\" style={{ backgroundImage: `url('${WaveMid}')` }}></div>\r\n      </div>\r\n      <div className=\"waveWrapperInner bgBottom\">\r\n        <div className=\"wave waveBottom\" style={{ backgroundImage: `url('${WaveBot}')` }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground;","import React from 'react';\r\nimport SvgClockComponent from './svg-clock';\r\nimport AnimatedBackground from './animated-bg';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <SvgClockComponent theme=\"sol\" />\r\n      <AnimatedBackground />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}